// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GLMRegressor.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "GLMRegressor.pb.h"

#include <algorithm>

#include <protobuf/stubs/common.h>
#include <protobuf/stubs/port.h>
#include <protobuf/stubs/once.h>
#include <protobuf/io/coded_stream.h>
#include <protobuf/wire_format_lite_inl.h>
#include <protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)

namespace CoreML {
namespace Specification {

void protobuf_ShutdownFile_GLMRegressor_2eproto() {
  GLMRegressor_default_instance_.Shutdown();
  GLMRegressor_DoubleArray_default_instance_.Shutdown();
}

void protobuf_InitDefaults_GLMRegressor_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  GLMRegressor_default_instance_.DefaultConstruct();
  GLMRegressor_DoubleArray_default_instance_.DefaultConstruct();
  GLMRegressor_default_instance_.get_mutable()->InitAsDefaultInstance();
  GLMRegressor_DoubleArray_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_GLMRegressor_2eproto_once_);
void protobuf_InitDefaults_GLMRegressor_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_GLMRegressor_2eproto_once_,
                 &protobuf_InitDefaults_GLMRegressor_2eproto_impl);
}
void protobuf_AddDesc_GLMRegressor_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_GLMRegressor_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_GLMRegressor_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_GLMRegressor_2eproto_once_);
void protobuf_AddDesc_GLMRegressor_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_GLMRegressor_2eproto_once_,
                 &protobuf_AddDesc_GLMRegressor_2eproto_impl);
}
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_GLMRegressor_2eproto {
  StaticDescriptorInitializer_GLMRegressor_2eproto() {
    protobuf_AddDesc_GLMRegressor_2eproto();
  }
} static_descriptor_initializer_GLMRegressor_2eproto_;
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

bool GLMRegressor_PostEvaluationTransform_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const GLMRegressor_PostEvaluationTransform GLMRegressor::NoTransform;
const GLMRegressor_PostEvaluationTransform GLMRegressor::Logit;
const GLMRegressor_PostEvaluationTransform GLMRegressor::Probit;
const GLMRegressor_PostEvaluationTransform GLMRegressor::PostEvaluationTransform_MIN;
const GLMRegressor_PostEvaluationTransform GLMRegressor::PostEvaluationTransform_MAX;
const int GLMRegressor::PostEvaluationTransform_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GLMRegressor_DoubleArray::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GLMRegressor_DoubleArray::GLMRegressor_DoubleArray()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_GLMRegressor_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:CoreML.Specification.GLMRegressor.DoubleArray)
}

void GLMRegressor_DoubleArray::InitAsDefaultInstance() {
}

GLMRegressor_DoubleArray::GLMRegressor_DoubleArray(const GLMRegressor_DoubleArray& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CoreML.Specification.GLMRegressor.DoubleArray)
}

void GLMRegressor_DoubleArray::SharedCtor() {
  _cached_size_ = 0;
}

GLMRegressor_DoubleArray::~GLMRegressor_DoubleArray() {
  // @@protoc_insertion_point(destructor:CoreML.Specification.GLMRegressor.DoubleArray)
  SharedDtor();
}

void GLMRegressor_DoubleArray::SharedDtor() {
}

void GLMRegressor_DoubleArray::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const GLMRegressor_DoubleArray& GLMRegressor_DoubleArray::default_instance() {
  protobuf_InitDefaults_GLMRegressor_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<GLMRegressor_DoubleArray> GLMRegressor_DoubleArray_default_instance_;

GLMRegressor_DoubleArray* GLMRegressor_DoubleArray::New(::google::protobuf::Arena* arena) const {
  GLMRegressor_DoubleArray* n = new GLMRegressor_DoubleArray;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GLMRegressor_DoubleArray::Clear() {
// @@protoc_insertion_point(message_clear_start:CoreML.Specification.GLMRegressor.DoubleArray)
  value_.Clear();
}

bool GLMRegressor_DoubleArray::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CoreML.Specification.GLMRegressor.DoubleArray)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated double value = 1;
      case 1: {
        if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_value())));
        } else if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 10, input, this->mutable_value())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CoreML.Specification.GLMRegressor.DoubleArray)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CoreML.Specification.GLMRegressor.DoubleArray)
  return false;
#undef DO_
}

void GLMRegressor_DoubleArray::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CoreML.Specification.GLMRegressor.DoubleArray)
  // repeated double value = 1;
  if (this->value_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_value_cached_byte_size_);
  }
  for (int i = 0; i < this->value_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDoubleNoTag(
      this->value(i), output);
  }

  // @@protoc_insertion_point(serialize_end:CoreML.Specification.GLMRegressor.DoubleArray)
}

size_t GLMRegressor_DoubleArray::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CoreML.Specification.GLMRegressor.DoubleArray)
  size_t total_size = 0;

  // repeated double value = 1;
  {
    size_t data_size = 0;
    unsigned int count = this->value_size();
    data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _value_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GLMRegressor_DoubleArray::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const GLMRegressor_DoubleArray*>(&from));
}

void GLMRegressor_DoubleArray::MergeFrom(const GLMRegressor_DoubleArray& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CoreML.Specification.GLMRegressor.DoubleArray)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void GLMRegressor_DoubleArray::UnsafeMergeFrom(const GLMRegressor_DoubleArray& from) {
  GOOGLE_DCHECK(&from != this);
  value_.UnsafeMergeFrom(from.value_);
}

void GLMRegressor_DoubleArray::CopyFrom(const GLMRegressor_DoubleArray& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CoreML.Specification.GLMRegressor.DoubleArray)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool GLMRegressor_DoubleArray::IsInitialized() const {

  return true;
}

void GLMRegressor_DoubleArray::Swap(GLMRegressor_DoubleArray* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GLMRegressor_DoubleArray::InternalSwap(GLMRegressor_DoubleArray* other) {
  value_.UnsafeArenaSwap(&other->value_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string GLMRegressor_DoubleArray::GetTypeName() const {
  return "CoreML.Specification.GLMRegressor.DoubleArray";
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GLMRegressor::kWeightsFieldNumber;
const int GLMRegressor::kOffsetFieldNumber;
const int GLMRegressor::kPostEvaluationTransformFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GLMRegressor::GLMRegressor()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_GLMRegressor_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:CoreML.Specification.GLMRegressor)
}

void GLMRegressor::InitAsDefaultInstance() {
}

GLMRegressor::GLMRegressor(const GLMRegressor& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CoreML.Specification.GLMRegressor)
}

void GLMRegressor::SharedCtor() {
  postevaluationtransform_ = 0;
  _cached_size_ = 0;
}

GLMRegressor::~GLMRegressor() {
  // @@protoc_insertion_point(destructor:CoreML.Specification.GLMRegressor)
  SharedDtor();
}

void GLMRegressor::SharedDtor() {
}

void GLMRegressor::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const GLMRegressor& GLMRegressor::default_instance() {
  protobuf_InitDefaults_GLMRegressor_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<GLMRegressor> GLMRegressor_default_instance_;

GLMRegressor* GLMRegressor::New(::google::protobuf::Arena* arena) const {
  GLMRegressor* n = new GLMRegressor;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GLMRegressor::Clear() {
// @@protoc_insertion_point(message_clear_start:CoreML.Specification.GLMRegressor)
  postevaluationtransform_ = 0;
  weights_.Clear();
  offset_.Clear();
}

bool GLMRegressor::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CoreML.Specification.GLMRegressor)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CoreML.Specification.GLMRegressor.DoubleArray weights = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_weights:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_weights()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_weights;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(18)) goto parse_offset;
        break;
      }

      // repeated double offset = 2;
      case 2: {
        if (tag == 18) {
         parse_offset:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_offset())));
        } else if (tag == 17) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 18, input, this->mutable_offset())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_postEvaluationTransform;
        break;
      }

      // optional .CoreML.Specification.GLMRegressor.PostEvaluationTransform postEvaluationTransform = 3;
      case 3: {
        if (tag == 24) {
         parse_postEvaluationTransform:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_postevaluationtransform(static_cast< ::CoreML::Specification::GLMRegressor_PostEvaluationTransform >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CoreML.Specification.GLMRegressor)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CoreML.Specification.GLMRegressor)
  return false;
#undef DO_
}

void GLMRegressor::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CoreML.Specification.GLMRegressor)
  // repeated .CoreML.Specification.GLMRegressor.DoubleArray weights = 1;
  for (unsigned int i = 0, n = this->weights_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, this->weights(i), output);
  }

  // repeated double offset = 2;
  if (this->offset_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_offset_cached_byte_size_);
  }
  for (int i = 0; i < this->offset_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDoubleNoTag(
      this->offset(i), output);
  }

  // optional .CoreML.Specification.GLMRegressor.PostEvaluationTransform postEvaluationTransform = 3;
  if (this->postevaluationtransform() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->postevaluationtransform(), output);
  }

  // @@protoc_insertion_point(serialize_end:CoreML.Specification.GLMRegressor)
}

size_t GLMRegressor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CoreML.Specification.GLMRegressor)
  size_t total_size = 0;

  // optional .CoreML.Specification.GLMRegressor.PostEvaluationTransform postEvaluationTransform = 3;
  if (this->postevaluationtransform() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->postevaluationtransform());
  }

  // repeated .CoreML.Specification.GLMRegressor.DoubleArray weights = 1;
  {
    unsigned int count = this->weights_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->weights(i));
    }
  }

  // repeated double offset = 2;
  {
    size_t data_size = 0;
    unsigned int count = this->offset_size();
    data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _offset_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GLMRegressor::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const GLMRegressor*>(&from));
}

void GLMRegressor::MergeFrom(const GLMRegressor& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CoreML.Specification.GLMRegressor)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void GLMRegressor::UnsafeMergeFrom(const GLMRegressor& from) {
  GOOGLE_DCHECK(&from != this);
  weights_.MergeFrom(from.weights_);
  offset_.UnsafeMergeFrom(from.offset_);
  if (from.postevaluationtransform() != 0) {
    set_postevaluationtransform(from.postevaluationtransform());
  }
}

void GLMRegressor::CopyFrom(const GLMRegressor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CoreML.Specification.GLMRegressor)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool GLMRegressor::IsInitialized() const {

  return true;
}

void GLMRegressor::Swap(GLMRegressor* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GLMRegressor::InternalSwap(GLMRegressor* other) {
  weights_.UnsafeArenaSwap(&other->weights_);
  offset_.UnsafeArenaSwap(&other->offset_);
  std::swap(postevaluationtransform_, other->postevaluationtransform_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string GLMRegressor::GetTypeName() const {
  return "CoreML.Specification.GLMRegressor";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GLMRegressor_DoubleArray

// repeated double value = 1;
int GLMRegressor_DoubleArray::value_size() const {
  return value_.size();
}
void GLMRegressor_DoubleArray::clear_value() {
  value_.Clear();
}
double GLMRegressor_DoubleArray::value(int index) const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.GLMRegressor.DoubleArray.value)
  return value_.Get(index);
}
void GLMRegressor_DoubleArray::set_value(int index, double value) {
  value_.Set(index, value);
  // @@protoc_insertion_point(field_set:CoreML.Specification.GLMRegressor.DoubleArray.value)
}
void GLMRegressor_DoubleArray::add_value(double value) {
  value_.Add(value);
  // @@protoc_insertion_point(field_add:CoreML.Specification.GLMRegressor.DoubleArray.value)
}
const ::google::protobuf::RepeatedField< double >&
GLMRegressor_DoubleArray::value() const {
  // @@protoc_insertion_point(field_list:CoreML.Specification.GLMRegressor.DoubleArray.value)
  return value_;
}
::google::protobuf::RepeatedField< double >*
GLMRegressor_DoubleArray::mutable_value() {
  // @@protoc_insertion_point(field_mutable_list:CoreML.Specification.GLMRegressor.DoubleArray.value)
  return &value_;
}

inline const GLMRegressor_DoubleArray* GLMRegressor_DoubleArray::internal_default_instance() {
  return &GLMRegressor_DoubleArray_default_instance_.get();
}
// -------------------------------------------------------------------

// GLMRegressor

// repeated .CoreML.Specification.GLMRegressor.DoubleArray weights = 1;
int GLMRegressor::weights_size() const {
  return weights_.size();
}
void GLMRegressor::clear_weights() {
  weights_.Clear();
}
const ::CoreML::Specification::GLMRegressor_DoubleArray& GLMRegressor::weights(int index) const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.GLMRegressor.weights)
  return weights_.Get(index);
}
::CoreML::Specification::GLMRegressor_DoubleArray* GLMRegressor::mutable_weights(int index) {
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.GLMRegressor.weights)
  return weights_.Mutable(index);
}
::CoreML::Specification::GLMRegressor_DoubleArray* GLMRegressor::add_weights() {
  // @@protoc_insertion_point(field_add:CoreML.Specification.GLMRegressor.weights)
  return weights_.Add();
}
::google::protobuf::RepeatedPtrField< ::CoreML::Specification::GLMRegressor_DoubleArray >*
GLMRegressor::mutable_weights() {
  // @@protoc_insertion_point(field_mutable_list:CoreML.Specification.GLMRegressor.weights)
  return &weights_;
}
const ::google::protobuf::RepeatedPtrField< ::CoreML::Specification::GLMRegressor_DoubleArray >&
GLMRegressor::weights() const {
  // @@protoc_insertion_point(field_list:CoreML.Specification.GLMRegressor.weights)
  return weights_;
}

// repeated double offset = 2;
int GLMRegressor::offset_size() const {
  return offset_.size();
}
void GLMRegressor::clear_offset() {
  offset_.Clear();
}
double GLMRegressor::offset(int index) const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.GLMRegressor.offset)
  return offset_.Get(index);
}
void GLMRegressor::set_offset(int index, double value) {
  offset_.Set(index, value);
  // @@protoc_insertion_point(field_set:CoreML.Specification.GLMRegressor.offset)
}
void GLMRegressor::add_offset(double value) {
  offset_.Add(value);
  // @@protoc_insertion_point(field_add:CoreML.Specification.GLMRegressor.offset)
}
const ::google::protobuf::RepeatedField< double >&
GLMRegressor::offset() const {
  // @@protoc_insertion_point(field_list:CoreML.Specification.GLMRegressor.offset)
  return offset_;
}
::google::protobuf::RepeatedField< double >*
GLMRegressor::mutable_offset() {
  // @@protoc_insertion_point(field_mutable_list:CoreML.Specification.GLMRegressor.offset)
  return &offset_;
}

// optional .CoreML.Specification.GLMRegressor.PostEvaluationTransform postEvaluationTransform = 3;
void GLMRegressor::clear_postevaluationtransform() {
  postevaluationtransform_ = 0;
}
::CoreML::Specification::GLMRegressor_PostEvaluationTransform GLMRegressor::postevaluationtransform() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.GLMRegressor.postEvaluationTransform)
  return static_cast< ::CoreML::Specification::GLMRegressor_PostEvaluationTransform >(postevaluationtransform_);
}
void GLMRegressor::set_postevaluationtransform(::CoreML::Specification::GLMRegressor_PostEvaluationTransform value) {

  postevaluationtransform_ = value;
  // @@protoc_insertion_point(field_set:CoreML.Specification.GLMRegressor.postEvaluationTransform)
}

inline const GLMRegressor* GLMRegressor::internal_default_instance() {
  return &GLMRegressor_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Specification
}  // namespace CoreML

// @@protoc_insertion_point(global_scope)
