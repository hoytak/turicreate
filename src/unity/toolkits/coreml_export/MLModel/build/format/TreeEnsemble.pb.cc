// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TreeEnsemble.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "TreeEnsemble.pb.h"

#include <algorithm>

#include <protobuf/stubs/common.h>
#include <protobuf/stubs/port.h>
#include <protobuf/stubs/once.h>
#include <protobuf/io/coded_stream.h>
#include <protobuf/wire_format_lite_inl.h>
#include <protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)

namespace CoreML {
namespace Specification {

void protobuf_ShutdownFile_TreeEnsemble_2eproto() {
  TreeEnsembleParameters_default_instance_.Shutdown();
  TreeEnsembleParameters_TreeNode_default_instance_.Shutdown();
  TreeEnsembleParameters_TreeNode_EvaluationInfo_default_instance_.Shutdown();
  TreeEnsembleClassifier_default_instance_.Shutdown();
  TreeEnsembleRegressor_default_instance_.Shutdown();
}

void protobuf_InitDefaults_TreeEnsemble_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::CoreML::Specification::protobuf_InitDefaults_DataStructures_2eproto();
  TreeEnsembleParameters_default_instance_.DefaultConstruct();
  TreeEnsembleParameters_TreeNode_default_instance_.DefaultConstruct();
  TreeEnsembleParameters_TreeNode_EvaluationInfo_default_instance_.DefaultConstruct();
  TreeEnsembleClassifier_default_instance_.DefaultConstruct();
  TreeEnsembleRegressor_default_instance_.DefaultConstruct();
  TreeEnsembleParameters_default_instance_.get_mutable()->InitAsDefaultInstance();
  TreeEnsembleParameters_TreeNode_default_instance_.get_mutable()->InitAsDefaultInstance();
  TreeEnsembleParameters_TreeNode_EvaluationInfo_default_instance_.get_mutable()->InitAsDefaultInstance();
  TreeEnsembleClassifier_default_instance_.get_mutable()->InitAsDefaultInstance();
  TreeEnsembleRegressor_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_TreeEnsemble_2eproto_once_);
void protobuf_InitDefaults_TreeEnsemble_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_TreeEnsemble_2eproto_once_,
                 &protobuf_InitDefaults_TreeEnsemble_2eproto_impl);
}
void protobuf_AddDesc_TreeEnsemble_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_TreeEnsemble_2eproto();
  ::CoreML::Specification::protobuf_AddDesc_DataStructures_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_TreeEnsemble_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_TreeEnsemble_2eproto_once_);
void protobuf_AddDesc_TreeEnsemble_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_TreeEnsemble_2eproto_once_,
                 &protobuf_AddDesc_TreeEnsemble_2eproto_impl);
}
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_TreeEnsemble_2eproto {
  StaticDescriptorInitializer_TreeEnsemble_2eproto() {
    protobuf_AddDesc_TreeEnsemble_2eproto();
  }
} static_descriptor_initializer_TreeEnsemble_2eproto_;
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
bool TreeEnsemblePostEvaluationTransform_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

bool TreeEnsembleParameters_TreeNode_TreeNodeBehavior_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const TreeEnsembleParameters_TreeNode_TreeNodeBehavior TreeEnsembleParameters_TreeNode::BranchOnValueLessThanEqual;
const TreeEnsembleParameters_TreeNode_TreeNodeBehavior TreeEnsembleParameters_TreeNode::BranchOnValueLessThan;
const TreeEnsembleParameters_TreeNode_TreeNodeBehavior TreeEnsembleParameters_TreeNode::BranchOnValueGreaterThanEqual;
const TreeEnsembleParameters_TreeNode_TreeNodeBehavior TreeEnsembleParameters_TreeNode::BranchOnValueGreaterThan;
const TreeEnsembleParameters_TreeNode_TreeNodeBehavior TreeEnsembleParameters_TreeNode::BranchOnValueEqual;
const TreeEnsembleParameters_TreeNode_TreeNodeBehavior TreeEnsembleParameters_TreeNode::BranchOnValueNotEqual;
const TreeEnsembleParameters_TreeNode_TreeNodeBehavior TreeEnsembleParameters_TreeNode::LeafNode;
const TreeEnsembleParameters_TreeNode_TreeNodeBehavior TreeEnsembleParameters_TreeNode::TreeNodeBehavior_MIN;
const TreeEnsembleParameters_TreeNode_TreeNodeBehavior TreeEnsembleParameters_TreeNode::TreeNodeBehavior_MAX;
const int TreeEnsembleParameters_TreeNode::TreeNodeBehavior_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TreeEnsembleParameters_TreeNode_EvaluationInfo::kEvaluationIndexFieldNumber;
const int TreeEnsembleParameters_TreeNode_EvaluationInfo::kEvaluationValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TreeEnsembleParameters_TreeNode_EvaluationInfo::TreeEnsembleParameters_TreeNode_EvaluationInfo()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_TreeEnsemble_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:CoreML.Specification.TreeEnsembleParameters.TreeNode.EvaluationInfo)
}

void TreeEnsembleParameters_TreeNode_EvaluationInfo::InitAsDefaultInstance() {
}

TreeEnsembleParameters_TreeNode_EvaluationInfo::TreeEnsembleParameters_TreeNode_EvaluationInfo(const TreeEnsembleParameters_TreeNode_EvaluationInfo& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CoreML.Specification.TreeEnsembleParameters.TreeNode.EvaluationInfo)
}

void TreeEnsembleParameters_TreeNode_EvaluationInfo::SharedCtor() {
  ::memset(&evaluationindex_, 0, reinterpret_cast<char*>(&evaluationvalue_) -
    reinterpret_cast<char*>(&evaluationindex_) + sizeof(evaluationvalue_));
  _cached_size_ = 0;
}

TreeEnsembleParameters_TreeNode_EvaluationInfo::~TreeEnsembleParameters_TreeNode_EvaluationInfo() {
  // @@protoc_insertion_point(destructor:CoreML.Specification.TreeEnsembleParameters.TreeNode.EvaluationInfo)
  SharedDtor();
}

void TreeEnsembleParameters_TreeNode_EvaluationInfo::SharedDtor() {
}

void TreeEnsembleParameters_TreeNode_EvaluationInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const TreeEnsembleParameters_TreeNode_EvaluationInfo& TreeEnsembleParameters_TreeNode_EvaluationInfo::default_instance() {
  protobuf_InitDefaults_TreeEnsemble_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TreeEnsembleParameters_TreeNode_EvaluationInfo> TreeEnsembleParameters_TreeNode_EvaluationInfo_default_instance_;

TreeEnsembleParameters_TreeNode_EvaluationInfo* TreeEnsembleParameters_TreeNode_EvaluationInfo::New(::google::protobuf::Arena* arena) const {
  TreeEnsembleParameters_TreeNode_EvaluationInfo* n = new TreeEnsembleParameters_TreeNode_EvaluationInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TreeEnsembleParameters_TreeNode_EvaluationInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CoreML.Specification.TreeEnsembleParameters.TreeNode.EvaluationInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(TreeEnsembleParameters_TreeNode_EvaluationInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<TreeEnsembleParameters_TreeNode_EvaluationInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(evaluationindex_, evaluationvalue_);

#undef ZR_HELPER_
#undef ZR_

}

bool TreeEnsembleParameters_TreeNode_EvaluationInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CoreML.Specification.TreeEnsembleParameters.TreeNode.EvaluationInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 evaluationIndex = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &evaluationindex_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_evaluationValue;
        break;
      }

      // optional double evaluationValue = 2;
      case 2: {
        if (tag == 17) {
         parse_evaluationValue:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &evaluationvalue_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CoreML.Specification.TreeEnsembleParameters.TreeNode.EvaluationInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CoreML.Specification.TreeEnsembleParameters.TreeNode.EvaluationInfo)
  return false;
#undef DO_
}

void TreeEnsembleParameters_TreeNode_EvaluationInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CoreML.Specification.TreeEnsembleParameters.TreeNode.EvaluationInfo)
  // optional uint64 evaluationIndex = 1;
  if (this->evaluationindex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->evaluationindex(), output);
  }

  // optional double evaluationValue = 2;
  if (this->evaluationvalue() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->evaluationvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:CoreML.Specification.TreeEnsembleParameters.TreeNode.EvaluationInfo)
}

size_t TreeEnsembleParameters_TreeNode_EvaluationInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CoreML.Specification.TreeEnsembleParameters.TreeNode.EvaluationInfo)
  size_t total_size = 0;

  // optional uint64 evaluationIndex = 1;
  if (this->evaluationindex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->evaluationindex());
  }

  // optional double evaluationValue = 2;
  if (this->evaluationvalue() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TreeEnsembleParameters_TreeNode_EvaluationInfo::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const TreeEnsembleParameters_TreeNode_EvaluationInfo*>(&from));
}

void TreeEnsembleParameters_TreeNode_EvaluationInfo::MergeFrom(const TreeEnsembleParameters_TreeNode_EvaluationInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CoreML.Specification.TreeEnsembleParameters.TreeNode.EvaluationInfo)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TreeEnsembleParameters_TreeNode_EvaluationInfo::UnsafeMergeFrom(const TreeEnsembleParameters_TreeNode_EvaluationInfo& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.evaluationindex() != 0) {
    set_evaluationindex(from.evaluationindex());
  }
  if (from.evaluationvalue() != 0) {
    set_evaluationvalue(from.evaluationvalue());
  }
}

void TreeEnsembleParameters_TreeNode_EvaluationInfo::CopyFrom(const TreeEnsembleParameters_TreeNode_EvaluationInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CoreML.Specification.TreeEnsembleParameters.TreeNode.EvaluationInfo)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TreeEnsembleParameters_TreeNode_EvaluationInfo::IsInitialized() const {

  return true;
}

void TreeEnsembleParameters_TreeNode_EvaluationInfo::Swap(TreeEnsembleParameters_TreeNode_EvaluationInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TreeEnsembleParameters_TreeNode_EvaluationInfo::InternalSwap(TreeEnsembleParameters_TreeNode_EvaluationInfo* other) {
  std::swap(evaluationindex_, other->evaluationindex_);
  std::swap(evaluationvalue_, other->evaluationvalue_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string TreeEnsembleParameters_TreeNode_EvaluationInfo::GetTypeName() const {
  return "CoreML.Specification.TreeEnsembleParameters.TreeNode.EvaluationInfo";
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TreeEnsembleParameters_TreeNode::kTreeIdFieldNumber;
const int TreeEnsembleParameters_TreeNode::kNodeIdFieldNumber;
const int TreeEnsembleParameters_TreeNode::kNodeBehaviorFieldNumber;
const int TreeEnsembleParameters_TreeNode::kBranchFeatureIndexFieldNumber;
const int TreeEnsembleParameters_TreeNode::kBranchFeatureValueFieldNumber;
const int TreeEnsembleParameters_TreeNode::kTrueChildNodeIdFieldNumber;
const int TreeEnsembleParameters_TreeNode::kFalseChildNodeIdFieldNumber;
const int TreeEnsembleParameters_TreeNode::kMissingValueTracksTrueChildFieldNumber;
const int TreeEnsembleParameters_TreeNode::kEvaluationInfoFieldNumber;
const int TreeEnsembleParameters_TreeNode::kRelativeHitRateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TreeEnsembleParameters_TreeNode::TreeEnsembleParameters_TreeNode()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_TreeEnsemble_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:CoreML.Specification.TreeEnsembleParameters.TreeNode)
}

void TreeEnsembleParameters_TreeNode::InitAsDefaultInstance() {
}

TreeEnsembleParameters_TreeNode::TreeEnsembleParameters_TreeNode(const TreeEnsembleParameters_TreeNode& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CoreML.Specification.TreeEnsembleParameters.TreeNode)
}

void TreeEnsembleParameters_TreeNode::SharedCtor() {
  ::memset(&treeid_, 0, reinterpret_cast<char*>(&relativehitrate_) -
    reinterpret_cast<char*>(&treeid_) + sizeof(relativehitrate_));
  _cached_size_ = 0;
}

TreeEnsembleParameters_TreeNode::~TreeEnsembleParameters_TreeNode() {
  // @@protoc_insertion_point(destructor:CoreML.Specification.TreeEnsembleParameters.TreeNode)
  SharedDtor();
}

void TreeEnsembleParameters_TreeNode::SharedDtor() {
}

void TreeEnsembleParameters_TreeNode::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const TreeEnsembleParameters_TreeNode& TreeEnsembleParameters_TreeNode::default_instance() {
  protobuf_InitDefaults_TreeEnsemble_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TreeEnsembleParameters_TreeNode> TreeEnsembleParameters_TreeNode_default_instance_;

TreeEnsembleParameters_TreeNode* TreeEnsembleParameters_TreeNode::New(::google::protobuf::Arena* arena) const {
  TreeEnsembleParameters_TreeNode* n = new TreeEnsembleParameters_TreeNode;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TreeEnsembleParameters_TreeNode::Clear() {
// @@protoc_insertion_point(message_clear_start:CoreML.Specification.TreeEnsembleParameters.TreeNode)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(TreeEnsembleParameters_TreeNode, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<TreeEnsembleParameters_TreeNode*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(treeid_, falsechildnodeid_);
  relativehitrate_ = 0;

#undef ZR_HELPER_
#undef ZR_

  evaluationinfo_.Clear();
}

bool TreeEnsembleParameters_TreeNode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CoreML.Specification.TreeEnsembleParameters.TreeNode)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 treeId = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &treeid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_nodeId;
        break;
      }

      // optional uint64 nodeId = 2;
      case 2: {
        if (tag == 16) {
         parse_nodeId:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &nodeid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_nodeBehavior;
        break;
      }

      // optional .CoreML.Specification.TreeEnsembleParameters.TreeNode.TreeNodeBehavior nodeBehavior = 3;
      case 3: {
        if (tag == 24) {
         parse_nodeBehavior:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_nodebehavior(static_cast< ::CoreML::Specification::TreeEnsembleParameters_TreeNode_TreeNodeBehavior >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_branchFeatureIndex;
        break;
      }

      // optional uint64 branchFeatureIndex = 10;
      case 10: {
        if (tag == 80) {
         parse_branchFeatureIndex:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &branchfeatureindex_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(89)) goto parse_branchFeatureValue;
        break;
      }

      // optional double branchFeatureValue = 11;
      case 11: {
        if (tag == 89) {
         parse_branchFeatureValue:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &branchfeaturevalue_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_trueChildNodeId;
        break;
      }

      // optional uint64 trueChildNodeId = 12;
      case 12: {
        if (tag == 96) {
         parse_trueChildNodeId:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &truechildnodeid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_falseChildNodeId;
        break;
      }

      // optional uint64 falseChildNodeId = 13;
      case 13: {
        if (tag == 104) {
         parse_falseChildNodeId:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &falsechildnodeid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_missingValueTracksTrueChild;
        break;
      }

      // optional bool missingValueTracksTrueChild = 14;
      case 14: {
        if (tag == 112) {
         parse_missingValueTracksTrueChild:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &missingvaluetrackstruechild_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(162)) goto parse_evaluationInfo;
        break;
      }

      // repeated .CoreML.Specification.TreeEnsembleParameters.TreeNode.EvaluationInfo evaluationInfo = 20;
      case 20: {
        if (tag == 162) {
         parse_evaluationInfo:
          DO_(input->IncrementRecursionDepth());
         parse_loop_evaluationInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_evaluationinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(162)) goto parse_loop_evaluationInfo;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(241)) goto parse_relativeHitRate;
        break;
      }

      // optional double relativeHitRate = 30;
      case 30: {
        if (tag == 241) {
         parse_relativeHitRate:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &relativehitrate_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CoreML.Specification.TreeEnsembleParameters.TreeNode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CoreML.Specification.TreeEnsembleParameters.TreeNode)
  return false;
#undef DO_
}

void TreeEnsembleParameters_TreeNode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CoreML.Specification.TreeEnsembleParameters.TreeNode)
  // optional uint64 treeId = 1;
  if (this->treeid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->treeid(), output);
  }

  // optional uint64 nodeId = 2;
  if (this->nodeid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->nodeid(), output);
  }

  // optional .CoreML.Specification.TreeEnsembleParameters.TreeNode.TreeNodeBehavior nodeBehavior = 3;
  if (this->nodebehavior() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->nodebehavior(), output);
  }

  // optional uint64 branchFeatureIndex = 10;
  if (this->branchfeatureindex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(10, this->branchfeatureindex(), output);
  }

  // optional double branchFeatureValue = 11;
  if (this->branchfeaturevalue() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->branchfeaturevalue(), output);
  }

  // optional uint64 trueChildNodeId = 12;
  if (this->truechildnodeid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(12, this->truechildnodeid(), output);
  }

  // optional uint64 falseChildNodeId = 13;
  if (this->falsechildnodeid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(13, this->falsechildnodeid(), output);
  }

  // optional bool missingValueTracksTrueChild = 14;
  if (this->missingvaluetrackstruechild() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(14, this->missingvaluetrackstruechild(), output);
  }

  // repeated .CoreML.Specification.TreeEnsembleParameters.TreeNode.EvaluationInfo evaluationInfo = 20;
  for (unsigned int i = 0, n = this->evaluationinfo_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      20, this->evaluationinfo(i), output);
  }

  // optional double relativeHitRate = 30;
  if (this->relativehitrate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(30, this->relativehitrate(), output);
  }

  // @@protoc_insertion_point(serialize_end:CoreML.Specification.TreeEnsembleParameters.TreeNode)
}

size_t TreeEnsembleParameters_TreeNode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CoreML.Specification.TreeEnsembleParameters.TreeNode)
  size_t total_size = 0;

  // optional uint64 treeId = 1;
  if (this->treeid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->treeid());
  }

  // optional uint64 nodeId = 2;
  if (this->nodeid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->nodeid());
  }

  // optional .CoreML.Specification.TreeEnsembleParameters.TreeNode.TreeNodeBehavior nodeBehavior = 3;
  if (this->nodebehavior() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->nodebehavior());
  }

  // optional uint64 branchFeatureIndex = 10;
  if (this->branchfeatureindex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->branchfeatureindex());
  }

  // optional double branchFeatureValue = 11;
  if (this->branchfeaturevalue() != 0) {
    total_size += 1 + 8;
  }

  // optional uint64 trueChildNodeId = 12;
  if (this->truechildnodeid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->truechildnodeid());
  }

  // optional uint64 falseChildNodeId = 13;
  if (this->falsechildnodeid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->falsechildnodeid());
  }

  // optional bool missingValueTracksTrueChild = 14;
  if (this->missingvaluetrackstruechild() != 0) {
    total_size += 1 + 1;
  }

  // optional double relativeHitRate = 30;
  if (this->relativehitrate() != 0) {
    total_size += 2 + 8;
  }

  // repeated .CoreML.Specification.TreeEnsembleParameters.TreeNode.EvaluationInfo evaluationInfo = 20;
  {
    unsigned int count = this->evaluationinfo_size();
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->evaluationinfo(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TreeEnsembleParameters_TreeNode::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const TreeEnsembleParameters_TreeNode*>(&from));
}

void TreeEnsembleParameters_TreeNode::MergeFrom(const TreeEnsembleParameters_TreeNode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CoreML.Specification.TreeEnsembleParameters.TreeNode)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TreeEnsembleParameters_TreeNode::UnsafeMergeFrom(const TreeEnsembleParameters_TreeNode& from) {
  GOOGLE_DCHECK(&from != this);
  evaluationinfo_.MergeFrom(from.evaluationinfo_);
  if (from.treeid() != 0) {
    set_treeid(from.treeid());
  }
  if (from.nodeid() != 0) {
    set_nodeid(from.nodeid());
  }
  if (from.nodebehavior() != 0) {
    set_nodebehavior(from.nodebehavior());
  }
  if (from.branchfeatureindex() != 0) {
    set_branchfeatureindex(from.branchfeatureindex());
  }
  if (from.branchfeaturevalue() != 0) {
    set_branchfeaturevalue(from.branchfeaturevalue());
  }
  if (from.truechildnodeid() != 0) {
    set_truechildnodeid(from.truechildnodeid());
  }
  if (from.falsechildnodeid() != 0) {
    set_falsechildnodeid(from.falsechildnodeid());
  }
  if (from.missingvaluetrackstruechild() != 0) {
    set_missingvaluetrackstruechild(from.missingvaluetrackstruechild());
  }
  if (from.relativehitrate() != 0) {
    set_relativehitrate(from.relativehitrate());
  }
}

void TreeEnsembleParameters_TreeNode::CopyFrom(const TreeEnsembleParameters_TreeNode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CoreML.Specification.TreeEnsembleParameters.TreeNode)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TreeEnsembleParameters_TreeNode::IsInitialized() const {

  return true;
}

void TreeEnsembleParameters_TreeNode::Swap(TreeEnsembleParameters_TreeNode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TreeEnsembleParameters_TreeNode::InternalSwap(TreeEnsembleParameters_TreeNode* other) {
  std::swap(treeid_, other->treeid_);
  std::swap(nodeid_, other->nodeid_);
  std::swap(nodebehavior_, other->nodebehavior_);
  std::swap(branchfeatureindex_, other->branchfeatureindex_);
  std::swap(branchfeaturevalue_, other->branchfeaturevalue_);
  std::swap(truechildnodeid_, other->truechildnodeid_);
  std::swap(falsechildnodeid_, other->falsechildnodeid_);
  std::swap(missingvaluetrackstruechild_, other->missingvaluetrackstruechild_);
  evaluationinfo_.UnsafeArenaSwap(&other->evaluationinfo_);
  std::swap(relativehitrate_, other->relativehitrate_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string TreeEnsembleParameters_TreeNode::GetTypeName() const {
  return "CoreML.Specification.TreeEnsembleParameters.TreeNode";
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TreeEnsembleParameters::kNodesFieldNumber;
const int TreeEnsembleParameters::kNumPredictionDimensionsFieldNumber;
const int TreeEnsembleParameters::kBasePredictionValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TreeEnsembleParameters::TreeEnsembleParameters()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_TreeEnsemble_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:CoreML.Specification.TreeEnsembleParameters)
}

void TreeEnsembleParameters::InitAsDefaultInstance() {
}

TreeEnsembleParameters::TreeEnsembleParameters(const TreeEnsembleParameters& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CoreML.Specification.TreeEnsembleParameters)
}

void TreeEnsembleParameters::SharedCtor() {
  numpredictiondimensions_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

TreeEnsembleParameters::~TreeEnsembleParameters() {
  // @@protoc_insertion_point(destructor:CoreML.Specification.TreeEnsembleParameters)
  SharedDtor();
}

void TreeEnsembleParameters::SharedDtor() {
}

void TreeEnsembleParameters::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const TreeEnsembleParameters& TreeEnsembleParameters::default_instance() {
  protobuf_InitDefaults_TreeEnsemble_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TreeEnsembleParameters> TreeEnsembleParameters_default_instance_;

TreeEnsembleParameters* TreeEnsembleParameters::New(::google::protobuf::Arena* arena) const {
  TreeEnsembleParameters* n = new TreeEnsembleParameters;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TreeEnsembleParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:CoreML.Specification.TreeEnsembleParameters)
  numpredictiondimensions_ = GOOGLE_ULONGLONG(0);
  nodes_.Clear();
  basepredictionvalue_.Clear();
}

bool TreeEnsembleParameters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CoreML.Specification.TreeEnsembleParameters)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CoreML.Specification.TreeEnsembleParameters.TreeNode nodes = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_nodes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_nodes()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_nodes;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(16)) goto parse_numPredictionDimensions;
        break;
      }

      // optional uint64 numPredictionDimensions = 2;
      case 2: {
        if (tag == 16) {
         parse_numPredictionDimensions:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &numpredictiondimensions_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_basePredictionValue;
        break;
      }

      // repeated double basePredictionValue = 3;
      case 3: {
        if (tag == 26) {
         parse_basePredictionValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_basepredictionvalue())));
        } else if (tag == 25) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 26, input, this->mutable_basepredictionvalue())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CoreML.Specification.TreeEnsembleParameters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CoreML.Specification.TreeEnsembleParameters)
  return false;
#undef DO_
}

void TreeEnsembleParameters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CoreML.Specification.TreeEnsembleParameters)
  // repeated .CoreML.Specification.TreeEnsembleParameters.TreeNode nodes = 1;
  for (unsigned int i = 0, n = this->nodes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, this->nodes(i), output);
  }

  // optional uint64 numPredictionDimensions = 2;
  if (this->numpredictiondimensions() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->numpredictiondimensions(), output);
  }

  // repeated double basePredictionValue = 3;
  if (this->basepredictionvalue_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_basepredictionvalue_cached_byte_size_);
  }
  for (int i = 0; i < this->basepredictionvalue_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDoubleNoTag(
      this->basepredictionvalue(i), output);
  }

  // @@protoc_insertion_point(serialize_end:CoreML.Specification.TreeEnsembleParameters)
}

size_t TreeEnsembleParameters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CoreML.Specification.TreeEnsembleParameters)
  size_t total_size = 0;

  // optional uint64 numPredictionDimensions = 2;
  if (this->numpredictiondimensions() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->numpredictiondimensions());
  }

  // repeated .CoreML.Specification.TreeEnsembleParameters.TreeNode nodes = 1;
  {
    unsigned int count = this->nodes_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->nodes(i));
    }
  }

  // repeated double basePredictionValue = 3;
  {
    size_t data_size = 0;
    unsigned int count = this->basepredictionvalue_size();
    data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _basepredictionvalue_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TreeEnsembleParameters::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const TreeEnsembleParameters*>(&from));
}

void TreeEnsembleParameters::MergeFrom(const TreeEnsembleParameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CoreML.Specification.TreeEnsembleParameters)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TreeEnsembleParameters::UnsafeMergeFrom(const TreeEnsembleParameters& from) {
  GOOGLE_DCHECK(&from != this);
  nodes_.MergeFrom(from.nodes_);
  basepredictionvalue_.UnsafeMergeFrom(from.basepredictionvalue_);
  if (from.numpredictiondimensions() != 0) {
    set_numpredictiondimensions(from.numpredictiondimensions());
  }
}

void TreeEnsembleParameters::CopyFrom(const TreeEnsembleParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CoreML.Specification.TreeEnsembleParameters)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TreeEnsembleParameters::IsInitialized() const {

  return true;
}

void TreeEnsembleParameters::Swap(TreeEnsembleParameters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TreeEnsembleParameters::InternalSwap(TreeEnsembleParameters* other) {
  nodes_.UnsafeArenaSwap(&other->nodes_);
  std::swap(numpredictiondimensions_, other->numpredictiondimensions_);
  basepredictionvalue_.UnsafeArenaSwap(&other->basepredictionvalue_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string TreeEnsembleParameters::GetTypeName() const {
  return "CoreML.Specification.TreeEnsembleParameters";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TreeEnsembleParameters_TreeNode_EvaluationInfo

// optional uint64 evaluationIndex = 1;
void TreeEnsembleParameters_TreeNode_EvaluationInfo::clear_evaluationindex() {
  evaluationindex_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 TreeEnsembleParameters_TreeNode_EvaluationInfo::evaluationindex() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.TreeEnsembleParameters.TreeNode.EvaluationInfo.evaluationIndex)
  return evaluationindex_;
}
void TreeEnsembleParameters_TreeNode_EvaluationInfo::set_evaluationindex(::google::protobuf::uint64 value) {

  evaluationindex_ = value;
  // @@protoc_insertion_point(field_set:CoreML.Specification.TreeEnsembleParameters.TreeNode.EvaluationInfo.evaluationIndex)
}

// optional double evaluationValue = 2;
void TreeEnsembleParameters_TreeNode_EvaluationInfo::clear_evaluationvalue() {
  evaluationvalue_ = 0;
}
double TreeEnsembleParameters_TreeNode_EvaluationInfo::evaluationvalue() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.TreeEnsembleParameters.TreeNode.EvaluationInfo.evaluationValue)
  return evaluationvalue_;
}
void TreeEnsembleParameters_TreeNode_EvaluationInfo::set_evaluationvalue(double value) {

  evaluationvalue_ = value;
  // @@protoc_insertion_point(field_set:CoreML.Specification.TreeEnsembleParameters.TreeNode.EvaluationInfo.evaluationValue)
}

inline const TreeEnsembleParameters_TreeNode_EvaluationInfo* TreeEnsembleParameters_TreeNode_EvaluationInfo::internal_default_instance() {
  return &TreeEnsembleParameters_TreeNode_EvaluationInfo_default_instance_.get();
}
// -------------------------------------------------------------------

// TreeEnsembleParameters_TreeNode

// optional uint64 treeId = 1;
void TreeEnsembleParameters_TreeNode::clear_treeid() {
  treeid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 TreeEnsembleParameters_TreeNode::treeid() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.TreeEnsembleParameters.TreeNode.treeId)
  return treeid_;
}
void TreeEnsembleParameters_TreeNode::set_treeid(::google::protobuf::uint64 value) {

  treeid_ = value;
  // @@protoc_insertion_point(field_set:CoreML.Specification.TreeEnsembleParameters.TreeNode.treeId)
}

// optional uint64 nodeId = 2;
void TreeEnsembleParameters_TreeNode::clear_nodeid() {
  nodeid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 TreeEnsembleParameters_TreeNode::nodeid() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.TreeEnsembleParameters.TreeNode.nodeId)
  return nodeid_;
}
void TreeEnsembleParameters_TreeNode::set_nodeid(::google::protobuf::uint64 value) {

  nodeid_ = value;
  // @@protoc_insertion_point(field_set:CoreML.Specification.TreeEnsembleParameters.TreeNode.nodeId)
}

// optional .CoreML.Specification.TreeEnsembleParameters.TreeNode.TreeNodeBehavior nodeBehavior = 3;
void TreeEnsembleParameters_TreeNode::clear_nodebehavior() {
  nodebehavior_ = 0;
}
::CoreML::Specification::TreeEnsembleParameters_TreeNode_TreeNodeBehavior TreeEnsembleParameters_TreeNode::nodebehavior() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.TreeEnsembleParameters.TreeNode.nodeBehavior)
  return static_cast< ::CoreML::Specification::TreeEnsembleParameters_TreeNode_TreeNodeBehavior >(nodebehavior_);
}
void TreeEnsembleParameters_TreeNode::set_nodebehavior(::CoreML::Specification::TreeEnsembleParameters_TreeNode_TreeNodeBehavior value) {

  nodebehavior_ = value;
  // @@protoc_insertion_point(field_set:CoreML.Specification.TreeEnsembleParameters.TreeNode.nodeBehavior)
}

// optional uint64 branchFeatureIndex = 10;
void TreeEnsembleParameters_TreeNode::clear_branchfeatureindex() {
  branchfeatureindex_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 TreeEnsembleParameters_TreeNode::branchfeatureindex() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.TreeEnsembleParameters.TreeNode.branchFeatureIndex)
  return branchfeatureindex_;
}
void TreeEnsembleParameters_TreeNode::set_branchfeatureindex(::google::protobuf::uint64 value) {

  branchfeatureindex_ = value;
  // @@protoc_insertion_point(field_set:CoreML.Specification.TreeEnsembleParameters.TreeNode.branchFeatureIndex)
}

// optional double branchFeatureValue = 11;
void TreeEnsembleParameters_TreeNode::clear_branchfeaturevalue() {
  branchfeaturevalue_ = 0;
}
double TreeEnsembleParameters_TreeNode::branchfeaturevalue() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.TreeEnsembleParameters.TreeNode.branchFeatureValue)
  return branchfeaturevalue_;
}
void TreeEnsembleParameters_TreeNode::set_branchfeaturevalue(double value) {

  branchfeaturevalue_ = value;
  // @@protoc_insertion_point(field_set:CoreML.Specification.TreeEnsembleParameters.TreeNode.branchFeatureValue)
}

// optional uint64 trueChildNodeId = 12;
void TreeEnsembleParameters_TreeNode::clear_truechildnodeid() {
  truechildnodeid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 TreeEnsembleParameters_TreeNode::truechildnodeid() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.TreeEnsembleParameters.TreeNode.trueChildNodeId)
  return truechildnodeid_;
}
void TreeEnsembleParameters_TreeNode::set_truechildnodeid(::google::protobuf::uint64 value) {

  truechildnodeid_ = value;
  // @@protoc_insertion_point(field_set:CoreML.Specification.TreeEnsembleParameters.TreeNode.trueChildNodeId)
}

// optional uint64 falseChildNodeId = 13;
void TreeEnsembleParameters_TreeNode::clear_falsechildnodeid() {
  falsechildnodeid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 TreeEnsembleParameters_TreeNode::falsechildnodeid() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.TreeEnsembleParameters.TreeNode.falseChildNodeId)
  return falsechildnodeid_;
}
void TreeEnsembleParameters_TreeNode::set_falsechildnodeid(::google::protobuf::uint64 value) {

  falsechildnodeid_ = value;
  // @@protoc_insertion_point(field_set:CoreML.Specification.TreeEnsembleParameters.TreeNode.falseChildNodeId)
}

// optional bool missingValueTracksTrueChild = 14;
void TreeEnsembleParameters_TreeNode::clear_missingvaluetrackstruechild() {
  missingvaluetrackstruechild_ = false;
}
bool TreeEnsembleParameters_TreeNode::missingvaluetrackstruechild() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.TreeEnsembleParameters.TreeNode.missingValueTracksTrueChild)
  return missingvaluetrackstruechild_;
}
void TreeEnsembleParameters_TreeNode::set_missingvaluetrackstruechild(bool value) {

  missingvaluetrackstruechild_ = value;
  // @@protoc_insertion_point(field_set:CoreML.Specification.TreeEnsembleParameters.TreeNode.missingValueTracksTrueChild)
}

// repeated .CoreML.Specification.TreeEnsembleParameters.TreeNode.EvaluationInfo evaluationInfo = 20;
int TreeEnsembleParameters_TreeNode::evaluationinfo_size() const {
  return evaluationinfo_.size();
}
void TreeEnsembleParameters_TreeNode::clear_evaluationinfo() {
  evaluationinfo_.Clear();
}
const ::CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo& TreeEnsembleParameters_TreeNode::evaluationinfo(int index) const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.TreeEnsembleParameters.TreeNode.evaluationInfo)
  return evaluationinfo_.Get(index);
}
::CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo* TreeEnsembleParameters_TreeNode::mutable_evaluationinfo(int index) {
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.TreeEnsembleParameters.TreeNode.evaluationInfo)
  return evaluationinfo_.Mutable(index);
}
::CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo* TreeEnsembleParameters_TreeNode::add_evaluationinfo() {
  // @@protoc_insertion_point(field_add:CoreML.Specification.TreeEnsembleParameters.TreeNode.evaluationInfo)
  return evaluationinfo_.Add();
}
::google::protobuf::RepeatedPtrField< ::CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo >*
TreeEnsembleParameters_TreeNode::mutable_evaluationinfo() {
  // @@protoc_insertion_point(field_mutable_list:CoreML.Specification.TreeEnsembleParameters.TreeNode.evaluationInfo)
  return &evaluationinfo_;
}
const ::google::protobuf::RepeatedPtrField< ::CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo >&
TreeEnsembleParameters_TreeNode::evaluationinfo() const {
  // @@protoc_insertion_point(field_list:CoreML.Specification.TreeEnsembleParameters.TreeNode.evaluationInfo)
  return evaluationinfo_;
}

// optional double relativeHitRate = 30;
void TreeEnsembleParameters_TreeNode::clear_relativehitrate() {
  relativehitrate_ = 0;
}
double TreeEnsembleParameters_TreeNode::relativehitrate() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.TreeEnsembleParameters.TreeNode.relativeHitRate)
  return relativehitrate_;
}
void TreeEnsembleParameters_TreeNode::set_relativehitrate(double value) {

  relativehitrate_ = value;
  // @@protoc_insertion_point(field_set:CoreML.Specification.TreeEnsembleParameters.TreeNode.relativeHitRate)
}

inline const TreeEnsembleParameters_TreeNode* TreeEnsembleParameters_TreeNode::internal_default_instance() {
  return &TreeEnsembleParameters_TreeNode_default_instance_.get();
}
// -------------------------------------------------------------------

// TreeEnsembleParameters

// repeated .CoreML.Specification.TreeEnsembleParameters.TreeNode nodes = 1;
int TreeEnsembleParameters::nodes_size() const {
  return nodes_.size();
}
void TreeEnsembleParameters::clear_nodes() {
  nodes_.Clear();
}
const ::CoreML::Specification::TreeEnsembleParameters_TreeNode& TreeEnsembleParameters::nodes(int index) const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.TreeEnsembleParameters.nodes)
  return nodes_.Get(index);
}
::CoreML::Specification::TreeEnsembleParameters_TreeNode* TreeEnsembleParameters::mutable_nodes(int index) {
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.TreeEnsembleParameters.nodes)
  return nodes_.Mutable(index);
}
::CoreML::Specification::TreeEnsembleParameters_TreeNode* TreeEnsembleParameters::add_nodes() {
  // @@protoc_insertion_point(field_add:CoreML.Specification.TreeEnsembleParameters.nodes)
  return nodes_.Add();
}
::google::protobuf::RepeatedPtrField< ::CoreML::Specification::TreeEnsembleParameters_TreeNode >*
TreeEnsembleParameters::mutable_nodes() {
  // @@protoc_insertion_point(field_mutable_list:CoreML.Specification.TreeEnsembleParameters.nodes)
  return &nodes_;
}
const ::google::protobuf::RepeatedPtrField< ::CoreML::Specification::TreeEnsembleParameters_TreeNode >&
TreeEnsembleParameters::nodes() const {
  // @@protoc_insertion_point(field_list:CoreML.Specification.TreeEnsembleParameters.nodes)
  return nodes_;
}

// optional uint64 numPredictionDimensions = 2;
void TreeEnsembleParameters::clear_numpredictiondimensions() {
  numpredictiondimensions_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 TreeEnsembleParameters::numpredictiondimensions() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.TreeEnsembleParameters.numPredictionDimensions)
  return numpredictiondimensions_;
}
void TreeEnsembleParameters::set_numpredictiondimensions(::google::protobuf::uint64 value) {

  numpredictiondimensions_ = value;
  // @@protoc_insertion_point(field_set:CoreML.Specification.TreeEnsembleParameters.numPredictionDimensions)
}

// repeated double basePredictionValue = 3;
int TreeEnsembleParameters::basepredictionvalue_size() const {
  return basepredictionvalue_.size();
}
void TreeEnsembleParameters::clear_basepredictionvalue() {
  basepredictionvalue_.Clear();
}
double TreeEnsembleParameters::basepredictionvalue(int index) const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.TreeEnsembleParameters.basePredictionValue)
  return basepredictionvalue_.Get(index);
}
void TreeEnsembleParameters::set_basepredictionvalue(int index, double value) {
  basepredictionvalue_.Set(index, value);
  // @@protoc_insertion_point(field_set:CoreML.Specification.TreeEnsembleParameters.basePredictionValue)
}
void TreeEnsembleParameters::add_basepredictionvalue(double value) {
  basepredictionvalue_.Add(value);
  // @@protoc_insertion_point(field_add:CoreML.Specification.TreeEnsembleParameters.basePredictionValue)
}
const ::google::protobuf::RepeatedField< double >&
TreeEnsembleParameters::basepredictionvalue() const {
  // @@protoc_insertion_point(field_list:CoreML.Specification.TreeEnsembleParameters.basePredictionValue)
  return basepredictionvalue_;
}
::google::protobuf::RepeatedField< double >*
TreeEnsembleParameters::mutable_basepredictionvalue() {
  // @@protoc_insertion_point(field_mutable_list:CoreML.Specification.TreeEnsembleParameters.basePredictionValue)
  return &basepredictionvalue_;
}

inline const TreeEnsembleParameters* TreeEnsembleParameters::internal_default_instance() {
  return &TreeEnsembleParameters_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TreeEnsembleClassifier::kTreeEnsembleFieldNumber;
const int TreeEnsembleClassifier::kPostEvaluationTransformFieldNumber;
const int TreeEnsembleClassifier::kStringClassLabelsFieldNumber;
const int TreeEnsembleClassifier::kInt64ClassLabelsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TreeEnsembleClassifier::TreeEnsembleClassifier()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_TreeEnsemble_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:CoreML.Specification.TreeEnsembleClassifier)
}

void TreeEnsembleClassifier::InitAsDefaultInstance() {
  treeensemble_ = const_cast< ::CoreML::Specification::TreeEnsembleParameters*>(
      ::CoreML::Specification::TreeEnsembleParameters::internal_default_instance());
}

TreeEnsembleClassifier::TreeEnsembleClassifier(const TreeEnsembleClassifier& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CoreML.Specification.TreeEnsembleClassifier)
}

void TreeEnsembleClassifier::SharedCtor() {
  treeensemble_ = NULL;
  postevaluationtransform_ = 0;
  clear_has_ClassLabels();
  _cached_size_ = 0;
}

TreeEnsembleClassifier::~TreeEnsembleClassifier() {
  // @@protoc_insertion_point(destructor:CoreML.Specification.TreeEnsembleClassifier)
  SharedDtor();
}

void TreeEnsembleClassifier::SharedDtor() {
  if (has_ClassLabels()) {
    clear_ClassLabels();
  }
  if (this != &TreeEnsembleClassifier_default_instance_.get()) {
    delete treeensemble_;
  }
}

void TreeEnsembleClassifier::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const TreeEnsembleClassifier& TreeEnsembleClassifier::default_instance() {
  protobuf_InitDefaults_TreeEnsemble_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TreeEnsembleClassifier> TreeEnsembleClassifier_default_instance_;

TreeEnsembleClassifier* TreeEnsembleClassifier::New(::google::protobuf::Arena* arena) const {
  TreeEnsembleClassifier* n = new TreeEnsembleClassifier;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TreeEnsembleClassifier::clear_ClassLabels() {
// @@protoc_insertion_point(one_of_clear_start:CoreML.Specification.TreeEnsembleClassifier)
  switch (ClassLabels_case()) {
    case kStringClassLabels: {
      delete ClassLabels_.stringclasslabels_;
      break;
    }
    case kInt64ClassLabels: {
      delete ClassLabels_.int64classlabels_;
      break;
    }
    case CLASSLABELS_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = CLASSLABELS_NOT_SET;
}


void TreeEnsembleClassifier::Clear() {
// @@protoc_insertion_point(message_clear_start:CoreML.Specification.TreeEnsembleClassifier)
  if (GetArenaNoVirtual() == NULL && treeensemble_ != NULL) delete treeensemble_;
  treeensemble_ = NULL;
  postevaluationtransform_ = 0;
  clear_ClassLabels();
}

bool TreeEnsembleClassifier::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CoreML.Specification.TreeEnsembleClassifier)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CoreML.Specification.TreeEnsembleParameters treeEnsemble = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_treeensemble()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_postEvaluationTransform;
        break;
      }

      // optional .CoreML.Specification.TreeEnsemblePostEvaluationTransform postEvaluationTransform = 2;
      case 2: {
        if (tag == 16) {
         parse_postEvaluationTransform:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_postevaluationtransform(static_cast< ::CoreML::Specification::TreeEnsemblePostEvaluationTransform >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(802)) goto parse_stringClassLabels;
        break;
      }

      // optional .CoreML.Specification.StringVector stringClassLabels = 100;
      case 100: {
        if (tag == 802) {
         parse_stringClassLabels:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_stringclasslabels()));
        } else {
          goto handle_unusual;
        }
        goto after_int64classlabels;
        break;
      }

      // optional .CoreML.Specification.Int64Vector int64ClassLabels = 101;
      case 101: {
        if (tag == 810) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_int64classlabels()));
        } else {
          goto handle_unusual;
        }
       after_int64classlabels:
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CoreML.Specification.TreeEnsembleClassifier)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CoreML.Specification.TreeEnsembleClassifier)
  return false;
#undef DO_
}

void TreeEnsembleClassifier::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CoreML.Specification.TreeEnsembleClassifier)
  // optional .CoreML.Specification.TreeEnsembleParameters treeEnsemble = 1;
  if (this->has_treeensemble()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, *this->treeensemble_, output);
  }

  // optional .CoreML.Specification.TreeEnsemblePostEvaluationTransform postEvaluationTransform = 2;
  if (this->postevaluationtransform() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->postevaluationtransform(), output);
  }

  // optional .CoreML.Specification.StringVector stringClassLabels = 100;
  if (has_stringclasslabels()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      100, *ClassLabels_.stringclasslabels_, output);
  }

  // optional .CoreML.Specification.Int64Vector int64ClassLabels = 101;
  if (has_int64classlabels()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      101, *ClassLabels_.int64classlabels_, output);
  }

  // @@protoc_insertion_point(serialize_end:CoreML.Specification.TreeEnsembleClassifier)
}

size_t TreeEnsembleClassifier::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CoreML.Specification.TreeEnsembleClassifier)
  size_t total_size = 0;

  // optional .CoreML.Specification.TreeEnsembleParameters treeEnsemble = 1;
  if (this->has_treeensemble()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->treeensemble_);
  }

  // optional .CoreML.Specification.TreeEnsemblePostEvaluationTransform postEvaluationTransform = 2;
  if (this->postevaluationtransform() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->postevaluationtransform());
  }

  switch (ClassLabels_case()) {
    // optional .CoreML.Specification.StringVector stringClassLabels = 100;
    case kStringClassLabels: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *ClassLabels_.stringclasslabels_);
      break;
    }
    // optional .CoreML.Specification.Int64Vector int64ClassLabels = 101;
    case kInt64ClassLabels: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *ClassLabels_.int64classlabels_);
      break;
    }
    case CLASSLABELS_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TreeEnsembleClassifier::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const TreeEnsembleClassifier*>(&from));
}

void TreeEnsembleClassifier::MergeFrom(const TreeEnsembleClassifier& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CoreML.Specification.TreeEnsembleClassifier)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TreeEnsembleClassifier::UnsafeMergeFrom(const TreeEnsembleClassifier& from) {
  GOOGLE_DCHECK(&from != this);
  switch (from.ClassLabels_case()) {
    case kStringClassLabels: {
      mutable_stringclasslabels()->::CoreML::Specification::StringVector::MergeFrom(from.stringclasslabels());
      break;
    }
    case kInt64ClassLabels: {
      mutable_int64classlabels()->::CoreML::Specification::Int64Vector::MergeFrom(from.int64classlabels());
      break;
    }
    case CLASSLABELS_NOT_SET: {
      break;
    }
  }
  if (from.has_treeensemble()) {
    mutable_treeensemble()->::CoreML::Specification::TreeEnsembleParameters::MergeFrom(from.treeensemble());
  }
  if (from.postevaluationtransform() != 0) {
    set_postevaluationtransform(from.postevaluationtransform());
  }
}

void TreeEnsembleClassifier::CopyFrom(const TreeEnsembleClassifier& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CoreML.Specification.TreeEnsembleClassifier)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TreeEnsembleClassifier::IsInitialized() const {

  return true;
}

void TreeEnsembleClassifier::Swap(TreeEnsembleClassifier* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TreeEnsembleClassifier::InternalSwap(TreeEnsembleClassifier* other) {
  std::swap(treeensemble_, other->treeensemble_);
  std::swap(postevaluationtransform_, other->postevaluationtransform_);
  std::swap(ClassLabels_, other->ClassLabels_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string TreeEnsembleClassifier::GetTypeName() const {
  return "CoreML.Specification.TreeEnsembleClassifier";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TreeEnsembleClassifier

// optional .CoreML.Specification.TreeEnsembleParameters treeEnsemble = 1;
bool TreeEnsembleClassifier::has_treeensemble() const {
  return this != internal_default_instance() && treeensemble_ != NULL;
}
void TreeEnsembleClassifier::clear_treeensemble() {
  if (GetArenaNoVirtual() == NULL && treeensemble_ != NULL) delete treeensemble_;
  treeensemble_ = NULL;
}
const ::CoreML::Specification::TreeEnsembleParameters& TreeEnsembleClassifier::treeensemble() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.TreeEnsembleClassifier.treeEnsemble)
  return treeensemble_ != NULL ? *treeensemble_
                         : *::CoreML::Specification::TreeEnsembleParameters::internal_default_instance();
}
::CoreML::Specification::TreeEnsembleParameters* TreeEnsembleClassifier::mutable_treeensemble() {

  if (treeensemble_ == NULL) {
    treeensemble_ = new ::CoreML::Specification::TreeEnsembleParameters;
  }
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.TreeEnsembleClassifier.treeEnsemble)
  return treeensemble_;
}
::CoreML::Specification::TreeEnsembleParameters* TreeEnsembleClassifier::release_treeensemble() {
  // @@protoc_insertion_point(field_release:CoreML.Specification.TreeEnsembleClassifier.treeEnsemble)

  ::CoreML::Specification::TreeEnsembleParameters* temp = treeensemble_;
  treeensemble_ = NULL;
  return temp;
}
void TreeEnsembleClassifier::set_allocated_treeensemble(::CoreML::Specification::TreeEnsembleParameters* treeensemble) {
  delete treeensemble_;
  treeensemble_ = treeensemble;
  if (treeensemble) {

  } else {

  }
  // @@protoc_insertion_point(field_set_allocated:CoreML.Specification.TreeEnsembleClassifier.treeEnsemble)
}

// optional .CoreML.Specification.TreeEnsemblePostEvaluationTransform postEvaluationTransform = 2;
void TreeEnsembleClassifier::clear_postevaluationtransform() {
  postevaluationtransform_ = 0;
}
::CoreML::Specification::TreeEnsemblePostEvaluationTransform TreeEnsembleClassifier::postevaluationtransform() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.TreeEnsembleClassifier.postEvaluationTransform)
  return static_cast< ::CoreML::Specification::TreeEnsemblePostEvaluationTransform >(postevaluationtransform_);
}
void TreeEnsembleClassifier::set_postevaluationtransform(::CoreML::Specification::TreeEnsemblePostEvaluationTransform value) {

  postevaluationtransform_ = value;
  // @@protoc_insertion_point(field_set:CoreML.Specification.TreeEnsembleClassifier.postEvaluationTransform)
}

// optional .CoreML.Specification.StringVector stringClassLabels = 100;
bool TreeEnsembleClassifier::has_stringclasslabels() const {
  return ClassLabels_case() == kStringClassLabels;
}
void TreeEnsembleClassifier::set_has_stringclasslabels() {
  _oneof_case_[0] = kStringClassLabels;
}
void TreeEnsembleClassifier::clear_stringclasslabels() {
  if (has_stringclasslabels()) {
    delete ClassLabels_.stringclasslabels_;
    clear_has_ClassLabels();
  }
}
 const ::CoreML::Specification::StringVector& TreeEnsembleClassifier::stringclasslabels() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.TreeEnsembleClassifier.stringClassLabels)
  return has_stringclasslabels()
      ? *ClassLabels_.stringclasslabels_
      : ::CoreML::Specification::StringVector::default_instance();
}
::CoreML::Specification::StringVector* TreeEnsembleClassifier::mutable_stringclasslabels() {
  if (!has_stringclasslabels()) {
    clear_ClassLabels();
    set_has_stringclasslabels();
    ClassLabels_.stringclasslabels_ = new ::CoreML::Specification::StringVector;
  }
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.TreeEnsembleClassifier.stringClassLabels)
  return ClassLabels_.stringclasslabels_;
}
::CoreML::Specification::StringVector* TreeEnsembleClassifier::release_stringclasslabels() {
  // @@protoc_insertion_point(field_release:CoreML.Specification.TreeEnsembleClassifier.stringClassLabels)
  if (has_stringclasslabels()) {
    clear_has_ClassLabels();
    ::CoreML::Specification::StringVector* temp = ClassLabels_.stringclasslabels_;
    ClassLabels_.stringclasslabels_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void TreeEnsembleClassifier::set_allocated_stringclasslabels(::CoreML::Specification::StringVector* stringclasslabels) {
  clear_ClassLabels();
  if (stringclasslabels) {
    set_has_stringclasslabels();
    ClassLabels_.stringclasslabels_ = stringclasslabels;
  }
  // @@protoc_insertion_point(field_set_allocated:CoreML.Specification.TreeEnsembleClassifier.stringClassLabels)
}

// optional .CoreML.Specification.Int64Vector int64ClassLabels = 101;
bool TreeEnsembleClassifier::has_int64classlabels() const {
  return ClassLabels_case() == kInt64ClassLabels;
}
void TreeEnsembleClassifier::set_has_int64classlabels() {
  _oneof_case_[0] = kInt64ClassLabels;
}
void TreeEnsembleClassifier::clear_int64classlabels() {
  if (has_int64classlabels()) {
    delete ClassLabels_.int64classlabels_;
    clear_has_ClassLabels();
  }
}
 const ::CoreML::Specification::Int64Vector& TreeEnsembleClassifier::int64classlabels() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.TreeEnsembleClassifier.int64ClassLabels)
  return has_int64classlabels()
      ? *ClassLabels_.int64classlabels_
      : ::CoreML::Specification::Int64Vector::default_instance();
}
::CoreML::Specification::Int64Vector* TreeEnsembleClassifier::mutable_int64classlabels() {
  if (!has_int64classlabels()) {
    clear_ClassLabels();
    set_has_int64classlabels();
    ClassLabels_.int64classlabels_ = new ::CoreML::Specification::Int64Vector;
  }
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.TreeEnsembleClassifier.int64ClassLabels)
  return ClassLabels_.int64classlabels_;
}
::CoreML::Specification::Int64Vector* TreeEnsembleClassifier::release_int64classlabels() {
  // @@protoc_insertion_point(field_release:CoreML.Specification.TreeEnsembleClassifier.int64ClassLabels)
  if (has_int64classlabels()) {
    clear_has_ClassLabels();
    ::CoreML::Specification::Int64Vector* temp = ClassLabels_.int64classlabels_;
    ClassLabels_.int64classlabels_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void TreeEnsembleClassifier::set_allocated_int64classlabels(::CoreML::Specification::Int64Vector* int64classlabels) {
  clear_ClassLabels();
  if (int64classlabels) {
    set_has_int64classlabels();
    ClassLabels_.int64classlabels_ = int64classlabels;
  }
  // @@protoc_insertion_point(field_set_allocated:CoreML.Specification.TreeEnsembleClassifier.int64ClassLabels)
}

bool TreeEnsembleClassifier::has_ClassLabels() const {
  return ClassLabels_case() != CLASSLABELS_NOT_SET;
}
void TreeEnsembleClassifier::clear_has_ClassLabels() {
  _oneof_case_[0] = CLASSLABELS_NOT_SET;
}
TreeEnsembleClassifier::ClassLabelsCase TreeEnsembleClassifier::ClassLabels_case() const {
  return TreeEnsembleClassifier::ClassLabelsCase(_oneof_case_[0]);
}
inline const TreeEnsembleClassifier* TreeEnsembleClassifier::internal_default_instance() {
  return &TreeEnsembleClassifier_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TreeEnsembleRegressor::kTreeEnsembleFieldNumber;
const int TreeEnsembleRegressor::kPostEvaluationTransformFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TreeEnsembleRegressor::TreeEnsembleRegressor()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_TreeEnsemble_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:CoreML.Specification.TreeEnsembleRegressor)
}

void TreeEnsembleRegressor::InitAsDefaultInstance() {
  treeensemble_ = const_cast< ::CoreML::Specification::TreeEnsembleParameters*>(
      ::CoreML::Specification::TreeEnsembleParameters::internal_default_instance());
}

TreeEnsembleRegressor::TreeEnsembleRegressor(const TreeEnsembleRegressor& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CoreML.Specification.TreeEnsembleRegressor)
}

void TreeEnsembleRegressor::SharedCtor() {
  treeensemble_ = NULL;
  postevaluationtransform_ = 0;
  _cached_size_ = 0;
}

TreeEnsembleRegressor::~TreeEnsembleRegressor() {
  // @@protoc_insertion_point(destructor:CoreML.Specification.TreeEnsembleRegressor)
  SharedDtor();
}

void TreeEnsembleRegressor::SharedDtor() {
  if (this != &TreeEnsembleRegressor_default_instance_.get()) {
    delete treeensemble_;
  }
}

void TreeEnsembleRegressor::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const TreeEnsembleRegressor& TreeEnsembleRegressor::default_instance() {
  protobuf_InitDefaults_TreeEnsemble_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TreeEnsembleRegressor> TreeEnsembleRegressor_default_instance_;

TreeEnsembleRegressor* TreeEnsembleRegressor::New(::google::protobuf::Arena* arena) const {
  TreeEnsembleRegressor* n = new TreeEnsembleRegressor;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TreeEnsembleRegressor::Clear() {
// @@protoc_insertion_point(message_clear_start:CoreML.Specification.TreeEnsembleRegressor)
  if (GetArenaNoVirtual() == NULL && treeensemble_ != NULL) delete treeensemble_;
  treeensemble_ = NULL;
  postevaluationtransform_ = 0;
}

bool TreeEnsembleRegressor::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CoreML.Specification.TreeEnsembleRegressor)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CoreML.Specification.TreeEnsembleParameters treeEnsemble = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_treeensemble()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_postEvaluationTransform;
        break;
      }

      // optional .CoreML.Specification.TreeEnsemblePostEvaluationTransform postEvaluationTransform = 2;
      case 2: {
        if (tag == 16) {
         parse_postEvaluationTransform:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_postevaluationtransform(static_cast< ::CoreML::Specification::TreeEnsemblePostEvaluationTransform >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CoreML.Specification.TreeEnsembleRegressor)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CoreML.Specification.TreeEnsembleRegressor)
  return false;
#undef DO_
}

void TreeEnsembleRegressor::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CoreML.Specification.TreeEnsembleRegressor)
  // optional .CoreML.Specification.TreeEnsembleParameters treeEnsemble = 1;
  if (this->has_treeensemble()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, *this->treeensemble_, output);
  }

  // optional .CoreML.Specification.TreeEnsemblePostEvaluationTransform postEvaluationTransform = 2;
  if (this->postevaluationtransform() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->postevaluationtransform(), output);
  }

  // @@protoc_insertion_point(serialize_end:CoreML.Specification.TreeEnsembleRegressor)
}

size_t TreeEnsembleRegressor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CoreML.Specification.TreeEnsembleRegressor)
  size_t total_size = 0;

  // optional .CoreML.Specification.TreeEnsembleParameters treeEnsemble = 1;
  if (this->has_treeensemble()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->treeensemble_);
  }

  // optional .CoreML.Specification.TreeEnsemblePostEvaluationTransform postEvaluationTransform = 2;
  if (this->postevaluationtransform() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->postevaluationtransform());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TreeEnsembleRegressor::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const TreeEnsembleRegressor*>(&from));
}

void TreeEnsembleRegressor::MergeFrom(const TreeEnsembleRegressor& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CoreML.Specification.TreeEnsembleRegressor)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TreeEnsembleRegressor::UnsafeMergeFrom(const TreeEnsembleRegressor& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.has_treeensemble()) {
    mutable_treeensemble()->::CoreML::Specification::TreeEnsembleParameters::MergeFrom(from.treeensemble());
  }
  if (from.postevaluationtransform() != 0) {
    set_postevaluationtransform(from.postevaluationtransform());
  }
}

void TreeEnsembleRegressor::CopyFrom(const TreeEnsembleRegressor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CoreML.Specification.TreeEnsembleRegressor)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TreeEnsembleRegressor::IsInitialized() const {

  return true;
}

void TreeEnsembleRegressor::Swap(TreeEnsembleRegressor* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TreeEnsembleRegressor::InternalSwap(TreeEnsembleRegressor* other) {
  std::swap(treeensemble_, other->treeensemble_);
  std::swap(postevaluationtransform_, other->postevaluationtransform_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string TreeEnsembleRegressor::GetTypeName() const {
  return "CoreML.Specification.TreeEnsembleRegressor";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TreeEnsembleRegressor

// optional .CoreML.Specification.TreeEnsembleParameters treeEnsemble = 1;
bool TreeEnsembleRegressor::has_treeensemble() const {
  return this != internal_default_instance() && treeensemble_ != NULL;
}
void TreeEnsembleRegressor::clear_treeensemble() {
  if (GetArenaNoVirtual() == NULL && treeensemble_ != NULL) delete treeensemble_;
  treeensemble_ = NULL;
}
const ::CoreML::Specification::TreeEnsembleParameters& TreeEnsembleRegressor::treeensemble() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.TreeEnsembleRegressor.treeEnsemble)
  return treeensemble_ != NULL ? *treeensemble_
                         : *::CoreML::Specification::TreeEnsembleParameters::internal_default_instance();
}
::CoreML::Specification::TreeEnsembleParameters* TreeEnsembleRegressor::mutable_treeensemble() {

  if (treeensemble_ == NULL) {
    treeensemble_ = new ::CoreML::Specification::TreeEnsembleParameters;
  }
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.TreeEnsembleRegressor.treeEnsemble)
  return treeensemble_;
}
::CoreML::Specification::TreeEnsembleParameters* TreeEnsembleRegressor::release_treeensemble() {
  // @@protoc_insertion_point(field_release:CoreML.Specification.TreeEnsembleRegressor.treeEnsemble)

  ::CoreML::Specification::TreeEnsembleParameters* temp = treeensemble_;
  treeensemble_ = NULL;
  return temp;
}
void TreeEnsembleRegressor::set_allocated_treeensemble(::CoreML::Specification::TreeEnsembleParameters* treeensemble) {
  delete treeensemble_;
  treeensemble_ = treeensemble;
  if (treeensemble) {

  } else {

  }
  // @@protoc_insertion_point(field_set_allocated:CoreML.Specification.TreeEnsembleRegressor.treeEnsemble)
}

// optional .CoreML.Specification.TreeEnsemblePostEvaluationTransform postEvaluationTransform = 2;
void TreeEnsembleRegressor::clear_postevaluationtransform() {
  postevaluationtransform_ = 0;
}
::CoreML::Specification::TreeEnsemblePostEvaluationTransform TreeEnsembleRegressor::postevaluationtransform() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.TreeEnsembleRegressor.postEvaluationTransform)
  return static_cast< ::CoreML::Specification::TreeEnsemblePostEvaluationTransform >(postevaluationtransform_);
}
void TreeEnsembleRegressor::set_postevaluationtransform(::CoreML::Specification::TreeEnsemblePostEvaluationTransform value) {

  postevaluationtransform_ = value;
  // @@protoc_insertion_point(field_set:CoreML.Specification.TreeEnsembleRegressor.postEvaluationTransform)
}

inline const TreeEnsembleRegressor* TreeEnsembleRegressor::internal_default_instance() {
  return &TreeEnsembleRegressor_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Specification
}  // namespace CoreML

// @@protoc_insertion_point(global_scope)
