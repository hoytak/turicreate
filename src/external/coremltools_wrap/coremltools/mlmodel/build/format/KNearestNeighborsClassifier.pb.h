// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: KNearestNeighborsClassifier.proto

#ifndef PROTOBUF_KNearestNeighborsClassifier_2eproto__INCLUDED
#define PROTOBUF_KNearestNeighborsClassifier_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include "DataStructures.pb.h"  // IWYU pragma: export
// @@protoc_insertion_point(includes)
namespace CoreML {
namespace Specification {
class ArrayFeatureType;
class ArrayFeatureTypeDefaultTypeInternal;
extern ArrayFeatureTypeDefaultTypeInternal _ArrayFeatureType_default_instance_;
class ArrayFeatureType_EnumeratedShapes;
class ArrayFeatureType_EnumeratedShapesDefaultTypeInternal;
extern ArrayFeatureType_EnumeratedShapesDefaultTypeInternal _ArrayFeatureType_EnumeratedShapes_default_instance_;
class ArrayFeatureType_Shape;
class ArrayFeatureType_ShapeDefaultTypeInternal;
extern ArrayFeatureType_ShapeDefaultTypeInternal _ArrayFeatureType_Shape_default_instance_;
class ArrayFeatureType_ShapeRange;
class ArrayFeatureType_ShapeRangeDefaultTypeInternal;
extern ArrayFeatureType_ShapeRangeDefaultTypeInternal _ArrayFeatureType_ShapeRange_default_instance_;
class DictionaryFeatureType;
class DictionaryFeatureTypeDefaultTypeInternal;
extern DictionaryFeatureTypeDefaultTypeInternal _DictionaryFeatureType_default_instance_;
class DoubleFeatureType;
class DoubleFeatureTypeDefaultTypeInternal;
extern DoubleFeatureTypeDefaultTypeInternal _DoubleFeatureType_default_instance_;
class DoubleRange;
class DoubleRangeDefaultTypeInternal;
extern DoubleRangeDefaultTypeInternal _DoubleRange_default_instance_;
class DoubleVector;
class DoubleVectorDefaultTypeInternal;
extern DoubleVectorDefaultTypeInternal _DoubleVector_default_instance_;
class FeatureType;
class FeatureTypeDefaultTypeInternal;
extern FeatureTypeDefaultTypeInternal _FeatureType_default_instance_;
class ImageFeatureType;
class ImageFeatureTypeDefaultTypeInternal;
extern ImageFeatureTypeDefaultTypeInternal _ImageFeatureType_default_instance_;
class ImageFeatureType_EnumeratedImageSizes;
class ImageFeatureType_EnumeratedImageSizesDefaultTypeInternal;
extern ImageFeatureType_EnumeratedImageSizesDefaultTypeInternal _ImageFeatureType_EnumeratedImageSizes_default_instance_;
class ImageFeatureType_ImageSize;
class ImageFeatureType_ImageSizeDefaultTypeInternal;
extern ImageFeatureType_ImageSizeDefaultTypeInternal _ImageFeatureType_ImageSize_default_instance_;
class ImageFeatureType_ImageSizeRange;
class ImageFeatureType_ImageSizeRangeDefaultTypeInternal;
extern ImageFeatureType_ImageSizeRangeDefaultTypeInternal _ImageFeatureType_ImageSizeRange_default_instance_;
class Int64FeatureType;
class Int64FeatureTypeDefaultTypeInternal;
extern Int64FeatureTypeDefaultTypeInternal _Int64FeatureType_default_instance_;
class Int64Range;
class Int64RangeDefaultTypeInternal;
extern Int64RangeDefaultTypeInternal _Int64Range_default_instance_;
class Int64Set;
class Int64SetDefaultTypeInternal;
extern Int64SetDefaultTypeInternal _Int64Set_default_instance_;
class Int64ToDoubleMap;
class Int64ToDoubleMapDefaultTypeInternal;
extern Int64ToDoubleMapDefaultTypeInternal _Int64ToDoubleMap_default_instance_;
class Int64ToDoubleMap_MapEntry;
class Int64ToDoubleMap_MapEntryDefaultTypeInternal;
extern Int64ToDoubleMap_MapEntryDefaultTypeInternal _Int64ToDoubleMap_MapEntry_default_instance_;
class Int64ToStringMap;
class Int64ToStringMapDefaultTypeInternal;
extern Int64ToStringMapDefaultTypeInternal _Int64ToStringMap_default_instance_;
class Int64ToStringMap_MapEntry;
class Int64ToStringMap_MapEntryDefaultTypeInternal;
extern Int64ToStringMap_MapEntryDefaultTypeInternal _Int64ToStringMap_MapEntry_default_instance_;
class Int64Vector;
class Int64VectorDefaultTypeInternal;
extern Int64VectorDefaultTypeInternal _Int64Vector_default_instance_;
class KNearestNeighborsClassifier;
class KNearestNeighborsClassifierDefaultTypeInternal;
extern KNearestNeighborsClassifierDefaultTypeInternal _KNearestNeighborsClassifier_default_instance_;
class KNearestNeighborsClassifier_FloatVector;
class KNearestNeighborsClassifier_FloatVectorDefaultTypeInternal;
extern KNearestNeighborsClassifier_FloatVectorDefaultTypeInternal _KNearestNeighborsClassifier_FloatVector_default_instance_;
class SequenceFeatureType;
class SequenceFeatureTypeDefaultTypeInternal;
extern SequenceFeatureTypeDefaultTypeInternal _SequenceFeatureType_default_instance_;
class SizeRange;
class SizeRangeDefaultTypeInternal;
extern SizeRangeDefaultTypeInternal _SizeRange_default_instance_;
class StringFeatureType;
class StringFeatureTypeDefaultTypeInternal;
extern StringFeatureTypeDefaultTypeInternal _StringFeatureType_default_instance_;
class StringToDoubleMap;
class StringToDoubleMapDefaultTypeInternal;
extern StringToDoubleMapDefaultTypeInternal _StringToDoubleMap_default_instance_;
class StringToDoubleMap_MapEntry;
class StringToDoubleMap_MapEntryDefaultTypeInternal;
extern StringToDoubleMap_MapEntryDefaultTypeInternal _StringToDoubleMap_MapEntry_default_instance_;
class StringToInt64Map;
class StringToInt64MapDefaultTypeInternal;
extern StringToInt64MapDefaultTypeInternal _StringToInt64Map_default_instance_;
class StringToInt64Map_MapEntry;
class StringToInt64Map_MapEntryDefaultTypeInternal;
extern StringToInt64Map_MapEntryDefaultTypeInternal _StringToInt64Map_MapEntry_default_instance_;
class StringVector;
class StringVectorDefaultTypeInternal;
extern StringVectorDefaultTypeInternal _StringVector_default_instance_;
}  // namespace Specification
}  // namespace CoreML

namespace CoreML {
namespace Specification {

namespace protobuf_KNearestNeighborsClassifier_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_KNearestNeighborsClassifier_2eproto

// ===================================================================

class KNearestNeighborsClassifier_FloatVector : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:CoreML.Specification.KNearestNeighborsClassifier.FloatVector) */ {
 public:
  KNearestNeighborsClassifier_FloatVector();
  virtual ~KNearestNeighborsClassifier_FloatVector();

  KNearestNeighborsClassifier_FloatVector(const KNearestNeighborsClassifier_FloatVector& from);

  inline KNearestNeighborsClassifier_FloatVector& operator=(const KNearestNeighborsClassifier_FloatVector& from) {
    CopyFrom(from);
    return *this;
  }

  static const KNearestNeighborsClassifier_FloatVector& default_instance();

  static inline const KNearestNeighborsClassifier_FloatVector* internal_default_instance() {
    return reinterpret_cast<const KNearestNeighborsClassifier_FloatVector*>(
               &_KNearestNeighborsClassifier_FloatVector_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(KNearestNeighborsClassifier_FloatVector* other);

  // implements Message ----------------------------------------------

  inline KNearestNeighborsClassifier_FloatVector* New() const PROTOBUF_FINAL { return New(NULL); }

  KNearestNeighborsClassifier_FloatVector* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const KNearestNeighborsClassifier_FloatVector& from);
  void MergeFrom(const KNearestNeighborsClassifier_FloatVector& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(KNearestNeighborsClassifier_FloatVector* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated float vector = 1;
  int vector_size() const;
  void clear_vector();
  static const int kVectorFieldNumber = 1;
  float vector(int index) const;
  void set_vector(int index, float value);
  void add_vector(float value);
  const ::google::protobuf::RepeatedField< float >&
      vector() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_vector();

  // @@protoc_insertion_point(class_scope:CoreML.Specification.KNearestNeighborsClassifier.FloatVector)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::RepeatedField< float > vector_;
  mutable int _vector_cached_byte_size_;
  mutable int _cached_size_;
  friend struct protobuf_KNearestNeighborsClassifier_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class KNearestNeighborsClassifier : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:CoreML.Specification.KNearestNeighborsClassifier) */ {
 public:
  KNearestNeighborsClassifier();
  virtual ~KNearestNeighborsClassifier();

  KNearestNeighborsClassifier(const KNearestNeighborsClassifier& from);

  inline KNearestNeighborsClassifier& operator=(const KNearestNeighborsClassifier& from) {
    CopyFrom(from);
    return *this;
  }

  static const KNearestNeighborsClassifier& default_instance();

  enum ClassLabelsCase {
    kStringClassLabels = 100,
    kInt64ClassLabels = 101,
    CLASSLABELS_NOT_SET = 0,
  };

  static inline const KNearestNeighborsClassifier* internal_default_instance() {
    return reinterpret_cast<const KNearestNeighborsClassifier*>(
               &_KNearestNeighborsClassifier_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(KNearestNeighborsClassifier* other);

  // implements Message ----------------------------------------------

  inline KNearestNeighborsClassifier* New() const PROTOBUF_FINAL { return New(NULL); }

  KNearestNeighborsClassifier* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const KNearestNeighborsClassifier& from);
  void MergeFrom(const KNearestNeighborsClassifier& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(KNearestNeighborsClassifier* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef KNearestNeighborsClassifier_FloatVector FloatVector;

  // accessors -------------------------------------------------------

  // repeated .CoreML.Specification.KNearestNeighborsClassifier.FloatVector floatSamples = 4;
  int floatsamples_size() const;
  void clear_floatsamples();
  static const int kFloatSamplesFieldNumber = 4;
  const ::CoreML::Specification::KNearestNeighborsClassifier_FloatVector& floatsamples(int index) const;
  ::CoreML::Specification::KNearestNeighborsClassifier_FloatVector* mutable_floatsamples(int index);
  ::CoreML::Specification::KNearestNeighborsClassifier_FloatVector* add_floatsamples();
  ::google::protobuf::RepeatedPtrField< ::CoreML::Specification::KNearestNeighborsClassifier_FloatVector >*
      mutable_floatsamples();
  const ::google::protobuf::RepeatedPtrField< ::CoreML::Specification::KNearestNeighborsClassifier_FloatVector >&
      floatsamples() const;

  // int32 dimensionality = 1;
  void clear_dimensionality();
  static const int kDimensionalityFieldNumber = 1;
  ::google::protobuf::int32 dimensionality() const;
  void set_dimensionality(::google::protobuf::int32 value);

  // int32 k = 10;
  void clear_k();
  static const int kKFieldNumber = 10;
  ::google::protobuf::int32 k() const;
  void set_k(::google::protobuf::int32 value);

  // .CoreML.Specification.StringVector stringClassLabels = 100;
  bool has_stringclasslabels() const;
  void clear_stringclasslabels();
  static const int kStringClassLabelsFieldNumber = 100;
  const ::CoreML::Specification::StringVector& stringclasslabels() const;
  ::CoreML::Specification::StringVector* mutable_stringclasslabels();
  ::CoreML::Specification::StringVector* release_stringclasslabels();
  void set_allocated_stringclasslabels(::CoreML::Specification::StringVector* stringclasslabels);

  // .CoreML.Specification.Int64Vector int64ClassLabels = 101;
  bool has_int64classlabels() const;
  void clear_int64classlabels();
  static const int kInt64ClassLabelsFieldNumber = 101;
  const ::CoreML::Specification::Int64Vector& int64classlabels() const;
  ::CoreML::Specification::Int64Vector* mutable_int64classlabels();
  ::CoreML::Specification::Int64Vector* release_int64classlabels();
  void set_allocated_int64classlabels(::CoreML::Specification::Int64Vector* int64classlabels);

  ClassLabelsCase ClassLabels_case() const;
  // @@protoc_insertion_point(class_scope:CoreML.Specification.KNearestNeighborsClassifier)
 private:
  void set_has_stringclasslabels();
  void set_has_int64classlabels();

  inline bool has_ClassLabels() const;
  void clear_ClassLabels();
  inline void clear_has_ClassLabels();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::CoreML::Specification::KNearestNeighborsClassifier_FloatVector > floatsamples_;
  ::google::protobuf::int32 dimensionality_;
  ::google::protobuf::int32 k_;
  union ClassLabelsUnion {
    ClassLabelsUnion() {}
    ::CoreML::Specification::StringVector* stringclasslabels_;
    ::CoreML::Specification::Int64Vector* int64classlabels_;
  } ClassLabels_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_KNearestNeighborsClassifier_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// KNearestNeighborsClassifier_FloatVector

// repeated float vector = 1;
inline int KNearestNeighborsClassifier_FloatVector::vector_size() const {
  return vector_.size();
}
inline void KNearestNeighborsClassifier_FloatVector::clear_vector() {
  vector_.Clear();
}
inline float KNearestNeighborsClassifier_FloatVector::vector(int index) const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.KNearestNeighborsClassifier.FloatVector.vector)
  return vector_.Get(index);
}
inline void KNearestNeighborsClassifier_FloatVector::set_vector(int index, float value) {
  vector_.Set(index, value);
  // @@protoc_insertion_point(field_set:CoreML.Specification.KNearestNeighborsClassifier.FloatVector.vector)
}
inline void KNearestNeighborsClassifier_FloatVector::add_vector(float value) {
  vector_.Add(value);
  // @@protoc_insertion_point(field_add:CoreML.Specification.KNearestNeighborsClassifier.FloatVector.vector)
}
inline const ::google::protobuf::RepeatedField< float >&
KNearestNeighborsClassifier_FloatVector::vector() const {
  // @@protoc_insertion_point(field_list:CoreML.Specification.KNearestNeighborsClassifier.FloatVector.vector)
  return vector_;
}
inline ::google::protobuf::RepeatedField< float >*
KNearestNeighborsClassifier_FloatVector::mutable_vector() {
  // @@protoc_insertion_point(field_mutable_list:CoreML.Specification.KNearestNeighborsClassifier.FloatVector.vector)
  return &vector_;
}

// -------------------------------------------------------------------

// KNearestNeighborsClassifier

// int32 dimensionality = 1;
inline void KNearestNeighborsClassifier::clear_dimensionality() {
  dimensionality_ = 0;
}
inline ::google::protobuf::int32 KNearestNeighborsClassifier::dimensionality() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.KNearestNeighborsClassifier.dimensionality)
  return dimensionality_;
}
inline void KNearestNeighborsClassifier::set_dimensionality(::google::protobuf::int32 value) {
  
  dimensionality_ = value;
  // @@protoc_insertion_point(field_set:CoreML.Specification.KNearestNeighborsClassifier.dimensionality)
}

// repeated .CoreML.Specification.KNearestNeighborsClassifier.FloatVector floatSamples = 4;
inline int KNearestNeighborsClassifier::floatsamples_size() const {
  return floatsamples_.size();
}
inline void KNearestNeighborsClassifier::clear_floatsamples() {
  floatsamples_.Clear();
}
inline const ::CoreML::Specification::KNearestNeighborsClassifier_FloatVector& KNearestNeighborsClassifier::floatsamples(int index) const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.KNearestNeighborsClassifier.floatSamples)
  return floatsamples_.Get(index);
}
inline ::CoreML::Specification::KNearestNeighborsClassifier_FloatVector* KNearestNeighborsClassifier::mutable_floatsamples(int index) {
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.KNearestNeighborsClassifier.floatSamples)
  return floatsamples_.Mutable(index);
}
inline ::CoreML::Specification::KNearestNeighborsClassifier_FloatVector* KNearestNeighborsClassifier::add_floatsamples() {
  // @@protoc_insertion_point(field_add:CoreML.Specification.KNearestNeighborsClassifier.floatSamples)
  return floatsamples_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CoreML::Specification::KNearestNeighborsClassifier_FloatVector >*
KNearestNeighborsClassifier::mutable_floatsamples() {
  // @@protoc_insertion_point(field_mutable_list:CoreML.Specification.KNearestNeighborsClassifier.floatSamples)
  return &floatsamples_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CoreML::Specification::KNearestNeighborsClassifier_FloatVector >&
KNearestNeighborsClassifier::floatsamples() const {
  // @@protoc_insertion_point(field_list:CoreML.Specification.KNearestNeighborsClassifier.floatSamples)
  return floatsamples_;
}

// int32 k = 10;
inline void KNearestNeighborsClassifier::clear_k() {
  k_ = 0;
}
inline ::google::protobuf::int32 KNearestNeighborsClassifier::k() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.KNearestNeighborsClassifier.k)
  return k_;
}
inline void KNearestNeighborsClassifier::set_k(::google::protobuf::int32 value) {
  
  k_ = value;
  // @@protoc_insertion_point(field_set:CoreML.Specification.KNearestNeighborsClassifier.k)
}

// .CoreML.Specification.StringVector stringClassLabels = 100;
inline bool KNearestNeighborsClassifier::has_stringclasslabels() const {
  return ClassLabels_case() == kStringClassLabels;
}
inline void KNearestNeighborsClassifier::set_has_stringclasslabels() {
  _oneof_case_[0] = kStringClassLabels;
}
inline void KNearestNeighborsClassifier::clear_stringclasslabels() {
  if (has_stringclasslabels()) {
    delete ClassLabels_.stringclasslabels_;
    clear_has_ClassLabels();
  }
}
inline  const ::CoreML::Specification::StringVector& KNearestNeighborsClassifier::stringclasslabels() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.KNearestNeighborsClassifier.stringClassLabels)
  return has_stringclasslabels()
      ? *ClassLabels_.stringclasslabels_
      : ::CoreML::Specification::StringVector::default_instance();
}
inline ::CoreML::Specification::StringVector* KNearestNeighborsClassifier::mutable_stringclasslabels() {
  if (!has_stringclasslabels()) {
    clear_ClassLabels();
    set_has_stringclasslabels();
    ClassLabels_.stringclasslabels_ = new ::CoreML::Specification::StringVector;
  }
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.KNearestNeighborsClassifier.stringClassLabels)
  return ClassLabels_.stringclasslabels_;
}
inline ::CoreML::Specification::StringVector* KNearestNeighborsClassifier::release_stringclasslabels() {
  // @@protoc_insertion_point(field_release:CoreML.Specification.KNearestNeighborsClassifier.stringClassLabels)
  if (has_stringclasslabels()) {
    clear_has_ClassLabels();
    ::CoreML::Specification::StringVector* temp = ClassLabels_.stringclasslabels_;
    ClassLabels_.stringclasslabels_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void KNearestNeighborsClassifier::set_allocated_stringclasslabels(::CoreML::Specification::StringVector* stringclasslabels) {
  clear_ClassLabels();
  if (stringclasslabels) {
    set_has_stringclasslabels();
    ClassLabels_.stringclasslabels_ = stringclasslabels;
  }
  // @@protoc_insertion_point(field_set_allocated:CoreML.Specification.KNearestNeighborsClassifier.stringClassLabels)
}

// .CoreML.Specification.Int64Vector int64ClassLabels = 101;
inline bool KNearestNeighborsClassifier::has_int64classlabels() const {
  return ClassLabels_case() == kInt64ClassLabels;
}
inline void KNearestNeighborsClassifier::set_has_int64classlabels() {
  _oneof_case_[0] = kInt64ClassLabels;
}
inline void KNearestNeighborsClassifier::clear_int64classlabels() {
  if (has_int64classlabels()) {
    delete ClassLabels_.int64classlabels_;
    clear_has_ClassLabels();
  }
}
inline  const ::CoreML::Specification::Int64Vector& KNearestNeighborsClassifier::int64classlabels() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.KNearestNeighborsClassifier.int64ClassLabels)
  return has_int64classlabels()
      ? *ClassLabels_.int64classlabels_
      : ::CoreML::Specification::Int64Vector::default_instance();
}
inline ::CoreML::Specification::Int64Vector* KNearestNeighborsClassifier::mutable_int64classlabels() {
  if (!has_int64classlabels()) {
    clear_ClassLabels();
    set_has_int64classlabels();
    ClassLabels_.int64classlabels_ = new ::CoreML::Specification::Int64Vector;
  }
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.KNearestNeighborsClassifier.int64ClassLabels)
  return ClassLabels_.int64classlabels_;
}
inline ::CoreML::Specification::Int64Vector* KNearestNeighborsClassifier::release_int64classlabels() {
  // @@protoc_insertion_point(field_release:CoreML.Specification.KNearestNeighborsClassifier.int64ClassLabels)
  if (has_int64classlabels()) {
    clear_has_ClassLabels();
    ::CoreML::Specification::Int64Vector* temp = ClassLabels_.int64classlabels_;
    ClassLabels_.int64classlabels_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void KNearestNeighborsClassifier::set_allocated_int64classlabels(::CoreML::Specification::Int64Vector* int64classlabels) {
  clear_ClassLabels();
  if (int64classlabels) {
    set_has_int64classlabels();
    ClassLabels_.int64classlabels_ = int64classlabels;
  }
  // @@protoc_insertion_point(field_set_allocated:CoreML.Specification.KNearestNeighborsClassifier.int64ClassLabels)
}

inline bool KNearestNeighborsClassifier::has_ClassLabels() const {
  return ClassLabels_case() != CLASSLABELS_NOT_SET;
}
inline void KNearestNeighborsClassifier::clear_has_ClassLabels() {
  _oneof_case_[0] = CLASSLABELS_NOT_SET;
}
inline KNearestNeighborsClassifier::ClassLabelsCase KNearestNeighborsClassifier::ClassLabels_case() const {
  return KNearestNeighborsClassifier::ClassLabelsCase(_oneof_case_[0]);
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace Specification
}  // namespace CoreML

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_KNearestNeighborsClassifier_2eproto__INCLUDED
